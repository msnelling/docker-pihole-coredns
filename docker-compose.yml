version: "3.7"

volumes:
  pihole-data: {}
  acme-data: {}

services:
  coredns:
    container_name: coredns
    image: coredns/coredns
    environment:
      AUTHORITATIVE_DNS: ${AUTHORITATIVE_DNS}
    volumes:
      - ./Corefile:/Corefile:ro
    networks:
      backend:
        ipv4_address: 172.28.241.8
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole
    hostname: ${PIHOLE_HOSTNAME}
    ports:
      - "${DNS_INTERFACE_IPV4}:53:53/tcp"
      - "${DNS_INTERFACE_IPV4}:53:53/udp"
    environment:
      TZ: 'Europe/London'
      DNS1: '172.28.241.8'
      DNS2: '172.28.241.8'
      WEBPASSWORD: "${PIHOLE_PASSWORD}"
    dns:
      - 172.28.241.8
    networks:
      frontend:
      backend:
        ipv4_address: 172.28.241.10
    volumes:
      - pihole-data:/etc/pihole:rw
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.routers.pihole-insecure.rule: Host(`${PIHOLE_HOSTNAME}.${DOMAIN}`) && PathPrefix(`/admin`)
      traefik.http.routers.pihole-insecure.entrypoints: http
      traefik.http.routers.pihole-insecure.middlewares: httpsRedirect@file
      traefik.http.routers.pihole.rule: Host(`${PIHOLE_HOSTNAME}.${DOMAIN}`) && PathPrefix(`/admin`)
      traefik.http.routers.pihole.entrypoints: https
      traefik.http.routers.pihole.tls.certresolver: default
      traefik.http.routers.pihole.middlewares: adminAuth@file
      traefik.http.services.pihole.loadbalancer.server.scheme: http
      traefik.http.services.pihole.loadbalancer.server.port: 80
    depends_on:
      - coredns
    restart: unless-stopped

  traefik:
    container_name: traefik
    image: traefik
    command:
      - --certificatesresolvers.default.acme.email=${CLOUDFLARE_API_EMAIL}
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_API_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    networks:
      frontend:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/etc/traefik/traefik.yaml
      - ./traefik.d:/etc/traefik/traefik.d
      - acme-data:/acme
    labels:
      traefik.enable: "true"
      traefik.docker.network: "frontend"
      traefik.http.routers.api-insecure.rule: Host(`${PIHOLE_HOSTNAME}.${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      traefik.http.routers.api-insecure.entrypoints: http
      traefik.http.routers.api-insecure.middlewares: httpsRedirect@file
      traefik.http.routers.api.rule: Host(`${PIHOLE_HOSTNAME}.${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      traefik.http.routers.api.entrypoints: https
      traefik.http.routers.api.tls.certresolver: default
      traefik.http.routers.api.middlewares: adminAuth@file
      traefik.http.routers.api.service: api@internal
    restart: unless-stopped

networks:
  frontend:
    name: frontend
    ipam:
      config:
        - subnet: 172.28.240.0/24
  backend:
    name: backend
    ipam:
      config:
        - subnet: 172.28.241.0/24
